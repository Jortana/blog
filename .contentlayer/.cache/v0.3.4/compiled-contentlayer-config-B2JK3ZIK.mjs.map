{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport { remark } from 'remark'\nimport remarkHtml from 'remark-html'\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: 'posts/*.md',\n  contentType: 'markdown',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    categories: { type: 'list', of: { type: 'string' }, required: true },\n    tags: { type: 'list', of: { type: 'string' }, required: true },\n    draft: { type: 'boolean', default: false },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) =>\n        `/posts/${post._raw.flattenedPath.replace('posts/', '')}`,\n    },\n    excerpt: {\n      type: 'string',\n      resolve: async (post) => {\n        const content = post.body.raw\n\n        // \u68C0\u67E5\u662F\u5426\u5305\u542B\u6807\u8BC6\n        let excerptContent = ''\n        if (content.includes('<!-- more -->')) {\n          ;[excerptContent] = content.split('<!-- more -->')\n        } else {\n          // \u5982\u679C\u6CA1\u6709\u6807\u8BC6\uFF0C\u622A\u53D6\u524D 200 \u4E2A\u5B57\u7B26\n          excerptContent = `${content.slice(0, 200)}...`\n        }\n\n        // \u5C06 Markdown \u8F6C\u6362\u4E3A HTML\n        const processedContent = await remark()\n          .use(remarkHtml)\n          .process(excerptContent)\n\n        return processedContent.toString()\n      },\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Post],\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,SAAS,cAAc;AACvB,OAAO,gBAAgB;AAEhB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,YAAY,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IACnE,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC7D,OAAO,EAAE,MAAM,WAAW,SAAS,MAAM;AAAA,EAC3C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SACR,UAAU,KAAK,KAAK,cAAc,QAAQ,UAAU,EAAE,CAAC;AAAA,IAC3D;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS,OAAO,SAAS;AACvB,cAAM,UAAU,KAAK,KAAK;AAG1B,YAAI,iBAAiB;AACrB,YAAI,QAAQ,SAAS,eAAe,GAAG;AACrC;AAAC,WAAC,cAAc,IAAI,QAAQ,MAAM,eAAe;AAAA,QACnD,OAAO;AAEL,2BAAiB,GAAG,QAAQ,MAAM,GAAG,GAAG,CAAC;AAAA,QAC3C;AAGA,cAAM,mBAAmB,MAAM,OAAO,EACnC,IAAI,UAAU,EACd,QAAQ,cAAc;AAEzB,eAAO,iBAAiB,SAAS;AAAA,MACnC;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AACtB,CAAC;",
  "names": []
}
